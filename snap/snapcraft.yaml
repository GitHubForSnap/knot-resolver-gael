name: knot-resolver-gael
version: 5.3.2
base: core20
summary: Knot Resolver
description: |
  Knot Resolver is a caching full resolver implementation written in C and LuaJIT, both a resolver library and a daemon. The core architecture is tiny and efficient, and provides a foundation and a state-machine like API for extensions. There are three modules built-in - iterator, validator, cache, and a few more are loaded by default. Most of the rich features are written in Lua(JIT) and C. Batteries are included, but optional.

  The LuaJIT modules, support DNS privacy and DNSSEC, and persistent cache with low memory footprint make it a great personal DNS resolver or a research tool to tap into DNS data. TL;DR it's the OpenResty of DNS.

  Strong filtering rules, and auto-configuration with etcd make it a great large-scale resolver solution.

  The server adopts a different scaling strategy than the rest of the DNS recursors - no threading, shared-nothing architecture (except MVCC cache that may be shared) that allows you to pin instances on available CPU cores and grow by self-replication. You can start and stop additional nodes depending on the contention without downtime.
  It also has strong support for DNS over TCP, notably TCP Fast-Open, query pipelining and deduplication, and response reordering.

grade: stable
confinement: strict

architectures:
  - build-on: arm64
  - build-on: amd64

license: "GPL-3.0"

layout:
  /usr/lib/knot-resolver:               # Needed to workaround absolute paths in Knot Resolver
    bind: $SNAP/usr/lib/knot-resolver
  /usr/share/dns:                       # Needed to workaround absolute paths in Knot Resolver
    bind: $SNAP/usr/share/dns
  /var/cache:                           # Needed to enable write access to the cache
    bind: $SNAP_DATA/var/cache
  /etc/wgetrc:                          # Needed by wget
    bind-file: $SNAP/etc/wgetrc

apps:
  kresd:
    command: kresd.sh
    daemon: simple
    environment:
      LUA_PATH: $SNAP/usr/lib/knot-resolver/?.lua;$SNAP/usr/lib/knot-resolver/?/init.lua;$SNAP/./?.lua;$SNAP/usr/share/luajit-2.1.0-beta3/?.lua;$SNAP/usr/share/lua/5.1/?.lua;$SNAP/usr/share/lua/5.1/?/init.lua
      LUA_CPATH: $SNAP/usr/lib/knot-resolver/?.so;$SNAP/./?.so;$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/?.so;$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/lua/5.1/?.so
    plugs:
    - network
    - network-bind

  deny-policy:
    command: policies/deny_policy.sh    # Rebuild the deny list every 4 hrs
    daemon: simple
    timer: 00:00-24:00/6
    plugs:
      - network

parts:
  launcher:
    plugin: dump
    source: snap/local/launcher
    stage:
      - kresd.sh

  policies:
    plugin: dump
    source: snap/local
    stage:
      - policies/deny_policy.sh

  libknot:
    plugin: dump
    source: https://download.opensuse.org/repositories/home:/CZ-NIC:/knot-resolver-latest/xUbuntu_20.04/${SNAPCRAFT_TARGET_ARCH}/libknot11_3.0.5-cznic.1_${SNAPCRAFT_TARGET_ARCH}.deb
    source-type: deb

  libdnssec:
    plugin: dump
    source: https://download.opensuse.org/repositories/home:/CZ-NIC:/knot-resolver-latest/xUbuntu_20.04/${SNAPCRAFT_TARGET_ARCH}/libdnssec8_3.0.5-cznic.1_${SNAPCRAFT_TARGET_ARCH}.deb
    source-type: deb

  libzscanner:
    plugin: dump
    source: https://download.opensuse.org/repositories/home:/CZ-NIC:/knot-resolver-latest/xUbuntu_20.04/${SNAPCRAFT_TARGET_ARCH}/libzscanner3_3.0.5-cznic.1_${SNAPCRAFT_TARGET_ARCH}.deb
    source-type: deb

  kresd:
    plugin: dump
    source: https://download.opensuse.org/repositories/home:/CZ-NIC:/knot-resolver-latest/xUbuntu_20.04/${SNAPCRAFT_TARGET_ARCH}/knot-resolver_5.3.2-cznic.1_${SNAPCRAFT_TARGET_ARCH}.deb
    source-type: deb
    stage-packages:
    - libnghttp2-14
    - libuv1
    - liblmdb0
    - libluajit-5.1-2
    - libbpfcc
    - dns-root-data
    - wget                              # Needed by deny-policy
    - lua-cqueues                       # Needed by deny-policy
    override-build: |
      snapcraftctl build

      rm $SNAPCRAFT_PART_INSTALL/lib/systemd/system/kresd.service

      cd $SNAPCRAFT_PART_INSTALL/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}
      ln -sf liblmdb.so.0.0.0 liblmdb.so
      ln -sf libbcc_bpf.so.0.12.0 libbpf.so.0

    after: [libknot, libdnssec, libzscanner]
